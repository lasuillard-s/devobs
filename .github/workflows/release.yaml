name: Release

on:
  push:
    tags:
      - v*

permissions: read-all

env:
  OUTPUT_DIR: dist

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        run: |
          rustup show
          rustup target add ${{ matrix.target }}

      - name: Manage Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build binary
        id: build
        run: |
          cargo build --verbose --release --target ${{ matrix.target }}

          mkdir ${{ env.OUTPUT_DIR }}
          binary_path="${{ env.OUTPUT_DIR }}/devobs-${{ matrix.target }}"
          mv target/${{ matrix.target }}/release/devobs "$binary_path"

          echo "binary-path=${binary_path}" >> $GITHUB_OUTPUT

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: ${{ steps.build.outputs.binary-path }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
    steps:
      - name: Download binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.OUTPUT_DIR }}

      - name: Show artifacts
        run: ls -l --all --recursive dist

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: dist/dist-*/devobs-*
